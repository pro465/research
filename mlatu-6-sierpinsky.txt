0=()
1=(~)

not=(~),
xor=,

nil=(-)
cons=~(+>)~>,(,~),~>>,(~,,<),

step=+(, cons)~>,<
add=()~((+,+,)++<<,)~<-<

loop=(~ nil~0~(step)~< cons + ()~(add)~< - ~ +<)+<
= (~ (-)~()~(+(, ~(+>)~>,(,~),~>>,(~,,<),)~>,<)~< ~(+>)~>,(,~),~>>,(~,,<), + ()~(()~((+,+,)++<<,)~<-<)~< - ~ +<)+<

nil 1 cons loop
= (+>(-),~((~))~,,<) (~ (-)~()~(+(, ~(+>)~>,(,~),~>>,(~,,<),)~>,<)~< ~(+>)~>,(,~),~>>,(~,,<), + ()~(()~((+,+,)++<<,)~<-<)~< - ~ +<)+<

nil 1 cons nil~0~(step)~< cons
= (+>(-),~((~))~,,<)    (-)~()~(+(, ~(+>)~>,(,~),~>>,(~,,<),)~>,<)~< ~(+>)~>,(,~),~>>,(~,,<),
